// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Role {
    admin
    customer
}

model User {
    id              String            @id @default(uuid())
    name            String
    email           String            @unique
    password        String
    role            Role              @default(customer)
    contactNo       String
    address         String
    profileImg      String
    books           Book[]
    createdAt       DateTime          @default(now())
    updatedAt       DateTime          @updatedAt
    order           Order[]
    ReviewAndRating ReviewAndRating[]

    @@map("users")
}

model Category {
    id        String   @id @default(uuid())
    title     String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    Book      Book[]

    @@map("categories")
}

model Book {
    id              String            @id @default(uuid())
    title           String
    author          String
    price           Float
    genre           String
    categoryId      String
    category        Category          @relation(fields: [categoryId], references: [id])
    publicationDate String
    createdAt       DateTime          @default(now())
    updatedAt       DateTime          @updatedAt
    ReviewAndRating ReviewAndRating[]
    User            User?             @relation(fields: [userId], references: [id])
    userId          String?

    @@map("books")
}

model Order {
    id           String   @id @default(uuid())
    userId       String
    user         User     @relation(fields: [userId], references: [id])
    orderedBooks Json
    status       Status   @default(pending)
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt

    @@map("orders")
}

model ReviewAndRating {
    id     String @id @default(uuid())
    review String
    rating Int
    userId String
    bookId String
    user   User   @relation(fields: [userId], references: [id])
    book   Book   @relation(fields: [bookId], references: [id])
}

enum Status {
    pending
    shipped
    delivered
}
